{"version":3,"sources":["utils/Context.js","components/DataBody.js","components/DataTable.js","components/Search.js","components/Navigate.js","utils/Api.js","components/DataArea.js","components/Container.js","components/Wrapped.js","components/Banner.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","DataBody","context","useContext","formatDate","date","dateArray","split","year","month","join","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","data-th","className","src","medium","alt","first","last","href","uuid","DataTable","state","id","headings","width","style","onClick","handleSort","toLowerCase","Search","data","type","placeholder","aria-label","onChange","e","handleSearchChange","Navigate","data-toggle","data-target","aria-controls","aria-expanded","Api","getUsers","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","then","results","console","log","Provider","value","event","filter","target","filteredList","item","values","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updateHeadings","length","Container","Wrapped","children","Banner","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31315d07.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Context = React.createContext({});\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport \"../styles/DataBody.css\";\r\nimport Context from '../utils/Context';\r\n\r\nconst DataBody = () => {\r\n    const context = useContext(Context);\r\n\r\n    function formatDate(date){\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate = [day, month, year].join(\"-\");\r\n        return formattedDate;  \r\n    }\r\n    return (\r\n        <tbody>\r\n            {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n             context.developerState.filteredUsers.map(({login, name, picture, phone, email, dob})=>{\r\n                 return (\r\n                     <tr key = {login.uuid}>\r\n                         <td data-th = \"Image\" className = \"align-middle\">\r\n                             <img src = {picture.medium}\r\n                             alt={\"profile image for \" +name.first + \"\" + name.last}\r\n                             className = \"img-responsive\"/>\r\n                         </td>\r\n                        <td data-th = \"Name\"\r\n                        className = \"name-cell align-middle\">\r\n                            {name.first} {name.last}\r\n                        </td>\r\n                        <td data-th = \"Phone\"\r\n                            className = \"align-middle\">\r\n                            {phone}\r\n                        </td>\r\n\r\n                <td data-th = \"Email\"\r\n                className = \"align-middle\">\r\n                    <a href = {\"mailto:\" + email}>\r\n                                {email}\r\n                            </a>\r\n                        </td>\r\n                        <td data-th = \"DOB\"\r\n                        className = \"align-middle\">\r\n                            {formatDate(dob.date)}\r\n                        </td>\r\n                     </tr>\r\n                 );\r\n             })  \r\n            ): (\r\n                <> </>\r\n            )}\r\n          \r\n        </tbody>\r\n    );\r\n}\r\nexport default DataBody;","import React, { useContext } from 'react';\r\nimport DataBody from './DataBody';\r\nimport \"../styles/DataTable.css\";\r\nimport Context from \"../utils/Context\"\r\n\r\nconst DataTable = () => {\r\n    const state = useContext(Context);\r\n    return (\r\n   <div className = \"datatable mt-5\">\r\n     <table id = \"table\" className = \"table table-striped table-hover table-condensed\">\r\n        <thead>\r\n           <tr>\r\n             {state.developerState.headings.map(({name, width}) => {\r\n            return(\r\n                 <th className = \"col\" key={name}\r\n                  style = {{width}}\r\n                   onClick={() => {\r\n                    \r\n                     state.handleSort(name.toLowerCase());\r\n                     }}\r\n                     >\r\n                    {name}\r\n                    <span className = \"pointer\"></span>\r\n                    </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <DataBody />\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default DataTable;","import React, { useContext } from \"react\";\r\nimport \"../styles/Search.css\";\r\nimport Context from \"../utils/Context\";\r\n\r\nconst Search = () =>{\r\nconst data = useContext(Context);\r\n    return (\r\n    <div className = \"searchbox\">\r\n     <div className = \"imput-group\">\r\n         <div className = \"input-group-prepend\"> <span className = \"input-group-text\"id = \" \">Search</span>\r\n     </div>\r\n       \r\n    <input className = \"form-control mr-sm-2\" type = \"search\" placeholder = \"name\" aria-label = \"Search\"\r\n    onChange={e => data.handleSearchChange(e)}\r\n    />\r\n     </div>\r\n     </div>\r\n    );\r\n}\r\nexport default Search;","import React from 'react';\r\nimport Search from \"./Search.js\";\r\nimport \"../styles/Navigate.css\";\r\n\r\nfunction Navigate (){\r\n    return (\r\n     <nav className = \"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <button className = \"navbar-toggler\" type = \"button\" data-toggle = \"collapse\"\r\n        data-target = \"#navbarNav\"\r\n        aria-controls = \"navbarNav\"\r\n        aria-expanded = \"false\"\r\n        aria-label = \"Toggle navigation\">\r\n            <span className = \"navbar-toggler-icon\"/>\r\n        </button>\r\n        <div className = \"collapse navbar-collapse row\" id = \"navbarNav\">\r\n        < div className = \"search-area col-4\">\r\n            <Search />\r\n        </div>\r\n        </div>\r\n     </nav>\r\n    );\r\n}\r\nexport default Navigate;","import axios from \"axios\";\r\n\r\nconst Api = {\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api?results=200&nat=au\");\r\n  },\r\n};\r\n//console.log(Api);\r\nexport default Api;\r\n","import React, {useState, useEffect} from 'react';\r\nimport DataTable from \"./DataTable\";\r\nimport Navigate from \"./Navigate\";\r\nimport Api from \"../utils/Api\";\r\nimport \"../styles/DataArea.css\";\r\nimport Context from \"../utils/Context\";\r\n\r\n\r\nconst DataArea = () => {\r\n    const [developerState, setDeveloperState] = useState({\r\n        users: [],\r\n        order: \"descend\",\r\n        filteredUsers: [],\r\n        headings : [\r\n            {name: \"Image\", width:\"10%\", order: \"descend\"},\r\n            {name: \"name\", width:\"10%\", order: \"descend\"},\r\n            {name: \"phone\", width:\"20%\", order: \"descend\"},\r\n            {name: \"email\", width:\"20%\", order: \"descend\"},\r\n            {name: \"dob\", width:\"10%\", order: \"descend\"},\r\n        ]\r\n    });\r\n    const handleSort = heading => {\r\n        let currentOrder = developerState.headings.filter(elem => elem.name === heading)\r\n        .map (elem => elem.order).toString();\r\n\r\n        if (currentOrder === \"descend\") {\r\n            currentOrder = \"ascend\"\r\n        } else {\r\n            currentOrder = \"descend\";\r\n        }\r\n        const compareFnc = (a, b) => {\r\n            if (currentOrder === \"ascend\"){\r\n                if(a[heading] === undefined){\r\n                    return 1;\r\n\r\n                } else if (b[heading]=== undefined){\r\n                    return -1;\r\n                } else if (heading === \"name\"){\r\n                    return a[heading].first.localeCompare(b[heading].first);\r\n                } else if (heading === \"dob\"){\r\n                    return a[heading].age - b[heading].age;\r\n                } else {\r\n                    return a[heading].localeCompare(b[heading]);\r\n                }\r\n                }else {\r\n                    if (a[heading]=== undefined){\r\n                        return 1;\r\n                    } else if (b[heading]=== undefined){\r\n                        return -1;\r\n                    } else if (heading === \"name\"){\r\n                        return b[heading].first.localeCompare(a[heading].first);\r\n                    }else if (heading === \"dob\"){\r\n                        return b[heading].age - a[heading].age;\r\n                    } else {\r\n                        return b[heading].localeCompare(a[heading]);\r\n                    }\r\n                }\r\n            };\r\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n        const updateHeadings = developerState.headings.map(elem => {\r\n            elem.order = elem.name === heading ?\r\n            currentOrder: elem.order;\r\n            return elem\r\n        });\r\n        setDeveloperState({ ...developerState, filteredUsers: sortedUsers, headings: updateHeadings\r\n        });\r\n        };\r\n    const handleSearchChange = event => {\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter(item => {\r\n        let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n        console.log(filter, values)\r\n      if(values.indexOf(filter.toLowerCase()) !== -1) {\r\n        return item\r\n      };\r\n      });\r\n        setDeveloperState({...developerState, filteredUsers: filteredList});\r\n    };\r\n    //For more information on useeffect go to https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n    useEffect(() => {\r\n        Api.getUsers().then(results => {\r\n            console.log(results.data.results);\r\n            setDeveloperState({\r\n                ...developerState,\r\n                users: results.data.results,\r\n                filteredUsers: results.data.results\r\n            });\r\n        });\r\n    }, []);\r\n    return (\r\n        <Context.Provider value = {{ developerState, handleSearchChange, handleSort }}>\r\n            <Navigate />\r\n            <div className = \"data-area\">\r\n            {developerState.filteredUsers.length > 0 ?\r\n            <DataTable /> :<div></div>}\r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n        \r\n    };\r\nexport default DataArea;","import React from \"react\";\r\nimport DataArea from \"./DataArea\";\r\nimport \"../styles/Container.css\"\r\n\r\nfunction Container () {\r\n    return (\r\n        <>\r\n        <DataArea />\r\n        </>\r\n    );\r\n};\r\nexport default Container;","import React from 'react';\r\nimport \"../styles/Wrapped.css\";\r\n\r\nfunction Wrapped ({ children}){\r\n    return (\r\n        <div className = \"wrapped\">\r\n            { children }\r\n        </div>\r\n    );\r\n}\r\nexport default Wrapped;","import React from 'react';\r\nimport \"../styles/Banner.css\";\r\n\r\nfunction Banner () {\r\n        return (\r\n            <div className = \"header\">\r\n               \r\n                <h1 className = \"header-img\"> User Directory</h1>\r\n                <p> Click on Name to filter the users alphabetically or use the search box to narrow down your search results</p>\r\n            </div>\r\n        )\r\n    }\r\nexport default Banner;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Container from './components/Container';\r\nimport Wrapped from './components/Wrapped';\r\nimport Banner from './components/Banner';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className =\"App\">\r\n        <Wrapped>\r\n            <Banner />\r\n            <Container />\r\n        </Wrapped>\r\n        </div>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n     \r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n      \r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n        \r\n          checkValidServiceWorker(swUrl, config);\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web application is being served first by cached files'\r\n            );\r\n          });\r\n        } else {\r\n         \r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n             \r\n                console.log('There is new content available for this web app');\r\n  \r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n             \r\n                console.log('Web content has been cached for offline use');\r\n  \r\n                \r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n   \r\n    fetch(swUrl)\r\n      .then(response => {\r\n     \r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n         \r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          \r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['K2D:300,400,700', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n\r\n\r\n//Unregistering serviceworker here\r\nserviceWorker.unregister();"],"sourceRoot":""}